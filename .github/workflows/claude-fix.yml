name: Claude AI Fix

on:
  issues:
    types: [opened, labeled]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to fix'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  claude-fix:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'claude-fix') || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Get issue details
        id: issue
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            ISSUE_NUMBER="${{ github.event.inputs.issue_number }}"
          else
            ISSUE_NUMBER="${{ github.event.issue.number }}"
          fi
          
          ISSUE_DATA=$(gh api repos/${{ github.repository }}/issues/$ISSUE_NUMBER)
          ISSUE_TITLE=$(echo "$ISSUE_DATA" | jq -r '.title')
          ISSUE_BODY=$(echo "$ISSUE_DATA" | jq -r '.body // ""')
          
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          echo "issue_title=$ISSUE_TITLE" >> $GITHUB_OUTPUT
          echo "issue_body<<EOF" >> $GITHUB_OUTPUT
          echo "$ISSUE_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create fix branch
        run: |
          ISSUE_NUMBER="${{ steps.issue.outputs.issue_number }}"
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          BRANCH_NAME="claude-fix/issue-${ISSUE_NUMBER}-${TIMESTAMP}"
          
          # Check if branch exists and delete if it does
          if git ls-remote --exit-code --heads origin "$BRANCH_NAME" >/dev/null 2>&1; then
            echo "Branch $BRANCH_NAME exists, creating unique branch"
            BRANCH_NAME="claude-fix/issue-${ISSUE_NUMBER}-${TIMESTAMP}-${GITHUB_RUN_ID}"
          fi
          
          git checkout -b "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
      
      - name: Claude AI Analysis and Fix
        id: claude_fix
        run: |
          # Create a prompt for Claude API
          cat > claude_prompt.txt << 'EOF'
          You are a helpful AI assistant that fixes code issues. 
          
          Issue Title: ${{ steps.issue.outputs.issue_title }}
          Issue Description: ${{ steps.issue.outputs.issue_body }}
          
          Project Context:
          - This is a Node.js project that creates a personal profile display tool
          - Main file: index.js
          - Uses chalk for colors and ASCII art display
          
          Please analyze the issue and provide specific code changes needed to fix it.
          Focus on:
          1. Understanding what the issue is asking for
          2. Providing concrete code modifications
          3. Ensuring the fix is safe and doesn't break existing functionality
          
          If this is about:
          - Profile updates: modify the profileData object in index.js
          - Display issues: modify the displayProfile function
          - New features: add appropriate code while maintaining existing structure
          
          Provide your response in the following format:
          FILE_TO_MODIFY: [filename]
          CHANGES_NEEDED: [description of changes]
          CODE_SNIPPET: [actual code to add/modify]
          EOF
          
          # For now, we'll simulate Claude's response with a simple fix
          # In a real implementation, you would call the Claude API here
          
          echo "Analyzing issue: ${{ steps.issue.outputs.issue_title }}"
          
          # Simple pattern matching for common issues
          TITLE_LOWER=$(echo "${{ steps.issue.outputs.issue_title }}" | tr '[:upper:]' '[:lower:]')
          BODY_LOWER=$(echo "${{ steps.issue.outputs.issue_body }}" | tr '[:upper:]' '[:lower:]')
          
          if [[ "$TITLE_LOWER" == *"color"* ]] || [[ "$BODY_LOWER" == *"color"* ]]; then
            echo "Color-related issue detected"
            # Add a comment about color configuration
            echo "" >> index.js
            echo "// Color configuration can be customized here" >> index.js
            echo "// Issue #${{ steps.issue.outputs.issue_number }}: ${{ steps.issue.outputs.issue_title }}" >> index.js
            echo "fix_applied=true" >> $GITHUB_OUTPUT
            echo "fix_description=Added color configuration comment" >> $GITHUB_OUTPUT
            
          elif [[ "$TITLE_LOWER" == *"width"* ]] || [[ "$BODY_LOWER" == *"width"* ]]; then
            echo "Width-related issue detected"
            # Modify card width if needed
            sed -i 's/const cardWidth = 80;/const cardWidth = 100; \/\/ Updated for issue #${{ steps.issue.outputs.issue_number }}/' index.js
            echo "fix_applied=true" >> $GITHUB_OUTPUT
            echo "fix_description=Updated card width configuration" >> $GITHUB_OUTPUT
            
          elif [[ "$TITLE_LOWER" == *"profile"* ]] || [[ "$BODY_LOWER" == *"profile"* ]]; then
            echo "Profile-related issue detected"
            # Add a comment about profile customization
            echo "" >> index.js
            echo "// Profile data can be customized in the profileData object above" >> index.js
            echo "// Issue #${{ steps.issue.outputs.issue_number }}: ${{ steps.issue.outputs.issue_title }}" >> index.js
            echo "fix_applied=true" >> $GITHUB_OUTPUT
            echo "fix_description=Added profile customization guidance" >> $GITHUB_OUTPUT
            
          else
            echo "Generic issue fix"
            # Create a general fix documentation
            cat > ISSUE_FIX_${{ steps.issue.outputs.issue_number }}.md << 'EOF'
          # Issue Fix Documentation
          
          ## Issue Details
          - **Issue #:** ${{ steps.issue.outputs.issue_number }}
          - **Title:** ${{ steps.issue.outputs.issue_title }}
          - **Description:** ${{ steps.issue.outputs.issue_body }}
          
          ## Fix Applied
          This issue has been acknowledged and documented. Further analysis may be needed for a complete solution.
          
          ## Next Steps
          1. Review the issue details above
          2. Test the current functionality
          3. Implement specific changes if needed
          4. Update tests if applicable
          
          **Fix Applied:** $(date)
          EOF
            echo "fix_applied=true" >> $GITHUB_OUTPUT
            echo "fix_description=Created issue fix documentation" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit changes
        if: steps.claude_fix.outputs.fix_applied == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Claude AI Bot"
          git add .
          git commit -m "🤖 Claude AI Fix: Issue #${{ steps.issue.outputs.issue_number }}

          ${{ steps.claude_fix.outputs.fix_description }}
          
          Issue: ${{ steps.issue.outputs.issue_title }}
          
          Fixes #${{ steps.issue.outputs.issue_number }}"
      
      - name: Push changes
        if: steps.claude_fix.outputs.fix_applied == 'true'
        run: |
          # Force push to handle any conflicts
          git push -u origin "$BRANCH_NAME" || git push --force-with-lease origin "$BRANCH_NAME"
      
      - name: Create Pull Request
        if: steps.claude_fix.outputs.fix_applied == 'true'
        run: |
          gh pr create \
            --title "🤖 Claude AI Fix: Issue #${{ steps.issue.outputs.issue_number }}" \
            --body "$(cat <<'EOF'
          ## 🤖 Claude AI Automated Fix
          
          This PR was automatically generated by Claude AI to address issue #${{ steps.issue.outputs.issue_number }}.
          
          ### Issue Details
          **Title:** ${{ steps.issue.outputs.issue_title }}
          **Issue:** #${{ steps.issue.outputs.issue_number }}
          
          ### Changes Made
          ${{ steps.claude_fix.outputs.fix_description }}
          
          ### Review Checklist
          - [ ] Verify the fix addresses the reported issue
          - [ ] Test that existing functionality still works
          - [ ] Check code quality and style
          - [ ] Ensure no security vulnerabilities introduced
          
          ### Testing
          Please test this fix by running:
          ```bash
          node index.js
          ```
          
          Fixes #${{ steps.issue.outputs.issue_number }}
          
          ---
          🤖 *This PR was automatically generated by Claude AI through GitHub Actions*
          EOF
          )" \
            --head "$BRANCH_NAME" \
            --base main \
            --label "automated-fix,claude-ai,needs-review"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Comment on issue
        if: steps.claude_fix.outputs.fix_applied == 'true'
        run: |
          PR_URL="https://github.com/${{ github.repository }}/pull/$(gh pr list --head $BRANCH_NAME --json number --jq '.[0].number')"
          gh issue comment ${{ steps.issue.outputs.issue_number }} --body "🤖 **Claude AI has analyzed this issue and created a potential fix!**

          **Changes Made:** ${{ steps.claude_fix.outputs.fix_description }}
          
          **Pull Request:** $PR_URL
          
          Please review the proposed changes and test them to ensure they address your issue correctly."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}